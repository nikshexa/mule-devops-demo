trigger:
  batch: true
  branches:
    include:
    - dev
  paths:
    exclude:
    - azure-pipelines.yml
    - pom.xml

pool:
  vmImage: 'ubuntu-latest'
variables:
- group: Build-Variable-Group
- name: MAVEN_CACHE_FOLDER
  value: $(Pipeline.Workspace)/.m2/repository
- name: MAVEN_OPTS
  value: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

steps:

- task: CacheBeta@0
  inputs:
    key: $(Build.SourcesDirectory)/pom.xml
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo

- task: DownloadSecureFile@1
  name: settingsxml
  inputs:
    secureFile: 'settings.xml'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      New-Item -Type Directory -Force "${HOME}/.m2"
      Copy-Item -Force "$(settingsxml.secureFilePath)" "${HOME}/.m2/settings.xml"
      
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    mavenAuthenticateFeed: true
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    effectivePomSkip: true
    sonarQubeRunAnalysis: false
    #goals: 'clean install package deploy $(MAVEN_OPTS)  -DmuleDeploy -Dserver=$(server) -Denvironment=$(environment) -Dworker=$(worker) -DworkerType=$(workerType) -Dapp.runtime=$(app.runtime) -Dapp.name=$(app.name)'
    goals: 'clean install package $(MAVEN_OPTS)  -DmuleDeploy -Denv=$(env) -DskipTests=false -Dworker=$(deployment.workers) -DworkerType=$(deployment.workerType) -Dapp.runtime=$(app.runtime) -Dapp.name=$(app.name) -DconnectedApp.clientId=$(connectedApp.clientId) -DconnectedApp.clientSecret=$(connectedApp.clientSecret) -DconnectedApp.grantType=$(connectedApp.grantType)'
  displayName: 'Run Maven Build'
  
- script: mvn clean test  # Run MUnit tests
  displayName: 'Run MUnit Tests'
  continueOnError: false  # Continue pipeline even if tests fail

- script: ls -R $(System.DefaultWorkingDirectory)/target/test-mule/munit  

- task: PublishTestResults@4
  inputs:
    testResultsFormat: 'JUnit'
    #testResultsFiles: '**/target/test-mule/munit/*.xml'
    testResultsFiles: $(System.DefaultWorkingDirectory)'/_nikshexa.mule-devops-demo/mule-Release/s/target/test-mule/munit/*.xml'
    searchFolder: $(System.DefaultWorkingDirectory)
    mergeTestResults: true
  displayName: 'Publish MUnit Test Results'  
  
- task: PublishPipelineArtifact@5
  inputs:
    targetPath: '$(Pipeline.Workspace)'
    artifact: 'mule-Release'
    publishLocation: 'pipeline'